pipeline {
    agent any

    environment {
        // Set Python version and paths
        PYTHON_HOME = 'C:\\Users\\91844\\AppData\\Local\\Programs\\Python\\Python312'  // Update with your Python installation path
        PATH = "${PYTHON_HOME}\\Scripts;${PYTHON_HOME};${env.PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from your repository
                checkout scm
            }
        }

        stage('Set Up Python Environment') {
            steps {
                script {
                    // Install necessary Python dependencies
                    bat 'python -m venv venv'  // Create a virtual environment
                    bat '.\\venv\\Scripts\\activate'  // Activate the virtual environment
                    bat 'pip install -r requirements.txt'  // Install dependencies from requirements.txt
                }
            }
        }

        stage('Run Tests with Coverage') {
            steps {
                script {
                    // Run pytest with coverage
                    bat '.\\venv\\Scripts\\activate && pytest --cov=src --cov-report xml:coverage.xml'
                }
            }
        }

        stage('Run SonarQube Analysis') {
            steps {
                script {
                    // Assuming SonarScanner is installed and sonar-scanner is in the PATH
                    bat '''sonar-scanner 
                    -Dsonar.projectKey=Unit-test-pipeline
                    -Dsonar.sources=src 
                    -Dsonar.tests=test 
                    -Dsonar.python.coverage.reportPaths=coverage.xml 
                    -Dsonar.host.url=http://localhost:9000 
                    -Dsonar.login=sqp_79bcd4679fe89310113d0e51792b56e2db430fbf
                    '''


                }
            }
        }
    }

    post {
        always {
            // Clean up after the build, deactivate virtual environment
            bat 'deactivate' 
        }

        success {
            echo 'Tests passed successfully!'
        }

        failure {
            echo 'Tests failed.'
        }
    }
}
